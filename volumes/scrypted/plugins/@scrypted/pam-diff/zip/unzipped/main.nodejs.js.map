{"version":3,"file":"main.nodejs.js","mappings":"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","sources":["../node_modules/pipe2pam/index.js","../../../sdk/dist/src/index.js","../../../sdk/dist/types/gen/index.js","../../../common/src/media-helpers.ts","../src/main.ts","../../../server/src/media-helpers.ts","../../../../../../private/var/folders/cf/6f6jj_5d4q10g5kn90f2f8yh0000gn/T/tmp-66274-XSpfGySC7I9l-.js","../external node-commonjs \"child_process\"","../external node-commonjs \"process\"","../external node-commonjs \"stream\"","../external node-commonjs \"util\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst Transform = require('stream').Transform;\n\n//constructor\nfunction Pipe2Pam() {\n    if (!(this instanceof Pipe2Pam)) {\n        return new Pipe2Pam();\n    }\n    //set readableObjectMode to true so that we can push objects out\n    //set writableObjectMode to false since we only support receiving buffer\n    Transform.call(this, {writableObjectMode: false, readableObjectMode: true});\n    //parsing first chunk should be looking for image header info\n    this._parseChunk = this._findHeaders;\n}\n\nutil.inherits(Pipe2Pam, Transform);\n\n//parse headers into object with values for width, height, depth, maxval, and tupltype\nPipe2Pam.prototype._parseHeaders = function (data) {\n    const headersArr = data.toString().toLowerCase().split('\\n');\n    const headersObj = {};\n    for (let i = 0, headerArr, length = headersArr.length; i < length; i++) {\n        headerArr = headersArr[i].split(' ');\n        headersObj[headerArr[0]] = headerArr[1];\n    }\n    return headersObj;\n};\n\n//find pam headers and reassign this._parseChunk to Pipe2Pam.prototype._findPam\nPipe2Pam.prototype._findHeaders = function (chunk) {\n    for (let i = 0, length = chunk.length; i < length; i++) {\n        //find start of image P7\\n = 0x50 0x37 0x0A\n        if (chunk[i] === 0x50 && chunk[i + 1] === 0x37 && chunk[i + 2] === 0x0A) {\n            this._soi = i;//might return if this._soi !== 0\n            i += 56;\n            for (i; i < length; i++) {\n                //DR\\n = 0x44 0x52 0x0A\n                if (chunk[i] === 0x44 && chunk[i + 1] === 0x52 && chunk[i + 2] === 0x0A) {\n                    //cache headers\n                    this._headers = this._parseHeaders(chunk.slice(this._soi + 3, i - 5));\n                    //byte length of headers\n                    this._loh = (i + 3) - this._soi;\n                    //byte length of pixel data, possible values for MAXVAL are 1, 255, 65535\n                    this._lop = this._headers.width * this._headers.height * this._headers.depth * (this._headers.maxval === 65535 ? 2 : 1);\n                    //byte length of image\n                    this._loi = this._loh + this._lop;\n                    //eoi position\n                    this._eoi = this._soi + this._loi;\n                    //only needed to find first header, now only parse for whole pam image\n                    this._parseChunk = this._findPam;\n                    //push chunks into array until we have enough to make a complete pam image\n                    this._chunks = [];\n                    //length of chunks array\n                    this._chunksLength = 0;\n                    // total length of bytes in chunks array\n                    this._chunksTotalLength = 0;\n                    //start parsing this chunk for pam image\n                    this._parseChunk(chunk);\n                    break;\n                }\n            }\n            break;\n        }\n    }\n};\n\nPipe2Pam.prototype._findPam = function (chunk) {\n    const chunkLength = chunk.length;\n    this._chunks.push(chunk);\n    this._chunksLength++;\n    this._chunksTotalLength += chunkLength;\n    if (this._loi === this._chunksTotalLength) {\n        const buffer = Buffer.concat(this._chunks, this._loi);\n        const data = {pam: buffer, headers: buffer.slice(0, this._loh), pixels: buffer.slice(this._loh), width: this._headers.width, height: this._headers.height, depth: this._headers.depth, maxval: this._headers.maxval, tupltype: this._headers.tupltype, chunks: this._chunksLength};\n        if (this._readableState.pipesCount > 0) {\n            this.push(data);\n        }\n        if (this.listenerCount('pam') > 0) {\n            this.emit('pam', data);\n        }\n        this._chunks = [];\n        this._chunksLength = 0;\n        this._chunksTotalLength = 0;\n    } else if (this._loi < this._chunksTotalLength) {\n        const divided = Math.floor(this._chunksTotalLength / this._loi);\n        const remainder = this._chunksTotalLength % this._loi;\n        const buffer = Buffer.concat(this._chunks, this._chunksTotalLength);\n        for (let i = 0, soi = 0, sop = this._loh, eoi = this._loi; i < divided; i++, soi += this._loi, sop += this._loi, eoi += this._loi) {\n            const data = {pam: buffer.slice(soi, eoi), headers: buffer.slice(soi, sop), pixels: buffer.slice(sop, eoi), width: this._headers.width, height: this._headers.height, depth: this._headers.depth, maxval: this._headers.maxval, tupltype: this._headers.tupltype, chunks: this._chunksLength};\n            if (this._readableState.pipesCount > 0) {\n                this.push(data);\n            }\n            if (this.listenerCount('pam') > 0) {\n                this.emit('pam', data);\n            }\n        }\n        this._chunks = [];\n        this._chunksLength = 0;\n        this._chunksTotalLength = 0;\n        if (remainder !== 0) {\n            this._chunks.push(chunk.slice(chunkLength - remainder));\n            this._chunksLength++;\n            this._chunksTotalLength += remainder;\n        }\n    }\n};\n\n//read data from pipe\nPipe2Pam.prototype._transform = function (chunk, encoding, callback) {\n    this._parseChunk(chunk);\n    callback();\n};\n\n//flush\nPipe2Pam.prototype._flush = function (callback) {\n    this.resetCache();\n    callback();\n};\n\n//reset and delete some cached values\nPipe2Pam.prototype.resetCache = function () {\n    delete this._headers;\n    delete this._soi;\n    delete this._loh;\n    delete this._lop;\n    delete this._loi;\n    delete this._eoi;\n    delete this._chunks;\n    delete this._chunksLength;\n    delete this._chunksTotalLength;\n    this._parseChunk = this._findHeaders;\n};\n\nmodule.exports = Pipe2Pam;","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MixinDeviceBase = exports.ScryptedDeviceBase = void 0;\n__exportStar(require(\"../types/gen/index\"), exports);\nconst index_1 = require(\"../types/gen/index\");\n/**\n * @category Core Reference\n */\nclass ScryptedDeviceBase extends index_1.DeviceBase {\n    constructor(nativeId) {\n        super();\n        this.nativeId = nativeId;\n    }\n    get storage() {\n        if (!this._storage) {\n            this._storage = deviceManager.getDeviceStorage(this.nativeId);\n        }\n        return this._storage;\n    }\n    get log() {\n        if (!this._log) {\n            this._log = deviceManager.getDeviceLogger(this.nativeId);\n        }\n        return this._log;\n    }\n    get console() {\n        if (!this._console) {\n            this._console = deviceManager.getDeviceConsole(this.nativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return deviceManager.getMixinConsole(mediaObject.sourceId, this.nativeId);\n    }\n    _lazyLoadDeviceState() {\n        if (!this._deviceState) {\n            if (this.nativeId) {\n                this._deviceState = deviceManager.getDeviceState(this.nativeId);\n            }\n            else {\n                this._deviceState = deviceManager.getDeviceState();\n            }\n        }\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return deviceManager.onDeviceEvent(this.nativeId, eventInterface, eventData);\n    }\n}\nexports.ScryptedDeviceBase = ScryptedDeviceBase;\n/**\n * @category Mixin Reference\n */\nclass MixinDeviceBase extends index_1.DeviceBase {\n    constructor(options) {\n        super();\n        this._listeners = new Set();\n        this.nativeId = systemManager.getDeviceById(this.id)?.nativeId;\n        this.mixinDevice = options.mixinDevice;\n        this.mixinDeviceInterfaces = options.mixinDeviceInterfaces;\n        this.mixinStorageSuffix = options.mixinStorageSuffix;\n        this._deviceState = options.mixinDeviceState;\n        // 8-11-2022\n        // RpcProxy will trap all properties, and the following check/hack will determine\n        // if the device state came from another node worker thread.\n        // This should ultimately be removed at some point in the future.\n        if (this._deviceState.__rpcproxy_traps_all_properties && deviceManager.createDeviceState && typeof this._deviceState.id === 'string') {\n            this._deviceState = deviceManager.createDeviceState(this._deviceState.id, this._deviceState.setState);\n        }\n        this.mixinProviderNativeId = options.mixinProviderNativeId;\n    }\n    get storage() {\n        if (!this._storage) {\n            const mixinStorageSuffix = this.mixinStorageSuffix;\n            const mixinStorageKey = this.id + (mixinStorageSuffix ? ':' + mixinStorageSuffix : '');\n            this._storage = deviceManager.getMixinStorage(mixinStorageKey, this.mixinProviderNativeId);\n        }\n        return this._storage;\n    }\n    get console() {\n        if (!this._console) {\n            if (deviceManager.getMixinConsole)\n                this._console = deviceManager.getMixinConsole(this.id, this.mixinProviderNativeId);\n            else\n                this._console = deviceManager.getDeviceConsole(this.mixinProviderNativeId);\n        }\n        return this._console;\n    }\n    async createMediaObject(data, mimeType) {\n        return mediaManager.createMediaObject(data, mimeType, {\n            sourceId: this.id,\n        });\n    }\n    getMediaObjectConsole(mediaObject) {\n        if (typeof mediaObject.sourceId !== 'string')\n            return this.console;\n        return deviceManager.getMixinConsole(mediaObject.sourceId, this.mixinProviderNativeId);\n    }\n    /**\n     * Fire an event for this device.\n     */\n    onDeviceEvent(eventInterface, eventData) {\n        return deviceManager.onMixinEvent(this.id, this, eventInterface, eventData);\n    }\n    _lazyLoadDeviceState() {\n    }\n    manageListener(listener) {\n        this._listeners.add(listener);\n    }\n    release() {\n        for (const l of this._listeners) {\n            l.removeListener();\n        }\n    }\n}\nexports.MixinDeviceBase = MixinDeviceBase;\n(function () {\n    function _createGetState(state) {\n        return function () {\n            this._lazyLoadDeviceState();\n            return this._deviceState?.[state];\n        };\n    }\n    function _createSetState(state) {\n        return function (value) {\n            this._lazyLoadDeviceState();\n            if (!this._deviceState)\n                console.warn('device state is unavailable. the device must be discovered with deviceManager.onDeviceDiscovered or deviceManager.onDevicesChanged before the state can be set.');\n            else\n                this._deviceState[state] = value;\n        };\n    }\n    for (const field of Object.values(index_1.ScryptedInterfaceProperty)) {\n        if (field === index_1.ScryptedInterfaceProperty.nativeId)\n            continue;\n        Object.defineProperty(ScryptedDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n        Object.defineProperty(MixinDeviceBase.prototype, field, {\n            set: _createSetState(field),\n            get: _createGetState(field),\n        });\n    }\n})();\nlet sdk = {};\ntry {\n    let runtimeAPI;\n    try {\n        runtimeAPI = pluginRuntimeAPI;\n    }\n    catch (e) {\n    }\n    sdk = Object.assign(sdk, {\n        log: deviceManager.getDeviceLogger(undefined),\n        deviceManager,\n        endpointManager,\n        mediaManager,\n        systemManager,\n        pluginHostAPI,\n        ...runtimeAPI,\n    });\n    try {\n        systemManager.setScryptedInterfaceDescriptors?.(index_1.TYPES_VERSION, index_1.ScryptedInterfaceDescriptors)?.catch(() => { });\n    }\n    catch (e) {\n    }\n}\ncatch (e) {\n    console.error('sdk initialization error, import @scrypted/types or use @scrypted/client instead', e);\n}\nexports.default = sdk;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScryptedMimeTypes = exports.ScryptedInterface = exports.MediaPlayerState = exports.SecuritySystemObstruction = exports.SecuritySystemMode = exports.AirQuality = exports.ChargeState = exports.LockState = exports.PanTiltZoomMovement = exports.ThermostatMode = exports.TemperatureUnit = exports.FanMode = exports.HumidityMode = exports.ScryptedDeviceType = exports.ScryptedInterfaceDescriptors = exports.ScryptedInterfaceMethod = exports.ScryptedInterfaceProperty = exports.DeviceBase = exports.TYPES_VERSION = void 0;\nexports.TYPES_VERSION = \"0.2.78\";\nclass DeviceBase {\n}\nexports.DeviceBase = DeviceBase;\nvar ScryptedInterfaceProperty;\n(function (ScryptedInterfaceProperty) {\n    ScryptedInterfaceProperty[\"id\"] = \"id\";\n    ScryptedInterfaceProperty[\"info\"] = \"info\";\n    ScryptedInterfaceProperty[\"interfaces\"] = \"interfaces\";\n    ScryptedInterfaceProperty[\"mixins\"] = \"mixins\";\n    ScryptedInterfaceProperty[\"name\"] = \"name\";\n    ScryptedInterfaceProperty[\"nativeId\"] = \"nativeId\";\n    ScryptedInterfaceProperty[\"pluginId\"] = \"pluginId\";\n    ScryptedInterfaceProperty[\"providedInterfaces\"] = \"providedInterfaces\";\n    ScryptedInterfaceProperty[\"providedName\"] = \"providedName\";\n    ScryptedInterfaceProperty[\"providedRoom\"] = \"providedRoom\";\n    ScryptedInterfaceProperty[\"providedType\"] = \"providedType\";\n    ScryptedInterfaceProperty[\"providerId\"] = \"providerId\";\n    ScryptedInterfaceProperty[\"room\"] = \"room\";\n    ScryptedInterfaceProperty[\"type\"] = \"type\";\n    ScryptedInterfaceProperty[\"on\"] = \"on\";\n    ScryptedInterfaceProperty[\"brightness\"] = \"brightness\";\n    ScryptedInterfaceProperty[\"colorTemperature\"] = \"colorTemperature\";\n    ScryptedInterfaceProperty[\"rgb\"] = \"rgb\";\n    ScryptedInterfaceProperty[\"hsv\"] = \"hsv\";\n    ScryptedInterfaceProperty[\"running\"] = \"running\";\n    ScryptedInterfaceProperty[\"paused\"] = \"paused\";\n    ScryptedInterfaceProperty[\"docked\"] = \"docked\";\n    ScryptedInterfaceProperty[\"temperatureSetting\"] = \"temperatureSetting\";\n    ScryptedInterfaceProperty[\"thermostatActiveMode\"] = \"thermostatActiveMode\";\n    ScryptedInterfaceProperty[\"thermostatAvailableModes\"] = \"thermostatAvailableModes\";\n    ScryptedInterfaceProperty[\"thermostatMode\"] = \"thermostatMode\";\n    ScryptedInterfaceProperty[\"thermostatSetpoint\"] = \"thermostatSetpoint\";\n    ScryptedInterfaceProperty[\"thermostatSetpointHigh\"] = \"thermostatSetpointHigh\";\n    ScryptedInterfaceProperty[\"thermostatSetpointLow\"] = \"thermostatSetpointLow\";\n    ScryptedInterfaceProperty[\"temperature\"] = \"temperature\";\n    ScryptedInterfaceProperty[\"temperatureUnit\"] = \"temperatureUnit\";\n    ScryptedInterfaceProperty[\"humidity\"] = \"humidity\";\n    ScryptedInterfaceProperty[\"ptzCapabilities\"] = \"ptzCapabilities\";\n    ScryptedInterfaceProperty[\"lockState\"] = \"lockState\";\n    ScryptedInterfaceProperty[\"entryOpen\"] = \"entryOpen\";\n    ScryptedInterfaceProperty[\"batteryLevel\"] = \"batteryLevel\";\n    ScryptedInterfaceProperty[\"chargeState\"] = \"chargeState\";\n    ScryptedInterfaceProperty[\"online\"] = \"online\";\n    ScryptedInterfaceProperty[\"fromMimeType\"] = \"fromMimeType\";\n    ScryptedInterfaceProperty[\"toMimeType\"] = \"toMimeType\";\n    ScryptedInterfaceProperty[\"binaryState\"] = \"binaryState\";\n    ScryptedInterfaceProperty[\"tampered\"] = \"tampered\";\n    ScryptedInterfaceProperty[\"powerDetected\"] = \"powerDetected\";\n    ScryptedInterfaceProperty[\"audioDetected\"] = \"audioDetected\";\n    ScryptedInterfaceProperty[\"motionDetected\"] = \"motionDetected\";\n    ScryptedInterfaceProperty[\"ambientLight\"] = \"ambientLight\";\n    ScryptedInterfaceProperty[\"occupied\"] = \"occupied\";\n    ScryptedInterfaceProperty[\"flooded\"] = \"flooded\";\n    ScryptedInterfaceProperty[\"ultraviolet\"] = \"ultraviolet\";\n    ScryptedInterfaceProperty[\"luminance\"] = \"luminance\";\n    ScryptedInterfaceProperty[\"position\"] = \"position\";\n    ScryptedInterfaceProperty[\"securitySystemState\"] = \"securitySystemState\";\n    ScryptedInterfaceProperty[\"pm10Density\"] = \"pm10Density\";\n    ScryptedInterfaceProperty[\"pm25Density\"] = \"pm25Density\";\n    ScryptedInterfaceProperty[\"vocDensity\"] = \"vocDensity\";\n    ScryptedInterfaceProperty[\"noxDensity\"] = \"noxDensity\";\n    ScryptedInterfaceProperty[\"co2ppm\"] = \"co2ppm\";\n    ScryptedInterfaceProperty[\"airQuality\"] = \"airQuality\";\n    ScryptedInterfaceProperty[\"humiditySetting\"] = \"humiditySetting\";\n    ScryptedInterfaceProperty[\"fan\"] = \"fan\";\n    ScryptedInterfaceProperty[\"applicationInfo\"] = \"applicationInfo\";\n})(ScryptedInterfaceProperty = exports.ScryptedInterfaceProperty || (exports.ScryptedInterfaceProperty = {}));\nvar ScryptedInterfaceMethod;\n(function (ScryptedInterfaceMethod) {\n    ScryptedInterfaceMethod[\"listen\"] = \"listen\";\n    ScryptedInterfaceMethod[\"probe\"] = \"probe\";\n    ScryptedInterfaceMethod[\"setMixins\"] = \"setMixins\";\n    ScryptedInterfaceMethod[\"setName\"] = \"setName\";\n    ScryptedInterfaceMethod[\"setRoom\"] = \"setRoom\";\n    ScryptedInterfaceMethod[\"setType\"] = \"setType\";\n    ScryptedInterfaceMethod[\"getPluginJson\"] = \"getPluginJson\";\n    ScryptedInterfaceMethod[\"turnOff\"] = \"turnOff\";\n    ScryptedInterfaceMethod[\"turnOn\"] = \"turnOn\";\n    ScryptedInterfaceMethod[\"setBrightness\"] = \"setBrightness\";\n    ScryptedInterfaceMethod[\"getTemperatureMaxK\"] = \"getTemperatureMaxK\";\n    ScryptedInterfaceMethod[\"getTemperatureMinK\"] = \"getTemperatureMinK\";\n    ScryptedInterfaceMethod[\"setColorTemperature\"] = \"setColorTemperature\";\n    ScryptedInterfaceMethod[\"setRgb\"] = \"setRgb\";\n    ScryptedInterfaceMethod[\"setHsv\"] = \"setHsv\";\n    ScryptedInterfaceMethod[\"sendNotification\"] = \"sendNotification\";\n    ScryptedInterfaceMethod[\"start\"] = \"start\";\n    ScryptedInterfaceMethod[\"stop\"] = \"stop\";\n    ScryptedInterfaceMethod[\"pause\"] = \"pause\";\n    ScryptedInterfaceMethod[\"resume\"] = \"resume\";\n    ScryptedInterfaceMethod[\"dock\"] = \"dock\";\n    ScryptedInterfaceMethod[\"setTemperature\"] = \"setTemperature\";\n    ScryptedInterfaceMethod[\"setThermostatMode\"] = \"setThermostatMode\";\n    ScryptedInterfaceMethod[\"setThermostatSetpoint\"] = \"setThermostatSetpoint\";\n    ScryptedInterfaceMethod[\"setThermostatSetpointHigh\"] = \"setThermostatSetpointHigh\";\n    ScryptedInterfaceMethod[\"setThermostatSetpointLow\"] = \"setThermostatSetpointLow\";\n    ScryptedInterfaceMethod[\"setTemperatureUnit\"] = \"setTemperatureUnit\";\n    ScryptedInterfaceMethod[\"getPictureOptions\"] = \"getPictureOptions\";\n    ScryptedInterfaceMethod[\"takePicture\"] = \"takePicture\";\n    ScryptedInterfaceMethod[\"getAudioStream\"] = \"getAudioStream\";\n    ScryptedInterfaceMethod[\"startDisplay\"] = \"startDisplay\";\n    ScryptedInterfaceMethod[\"stopDisplay\"] = \"stopDisplay\";\n    ScryptedInterfaceMethod[\"getVideoStream\"] = \"getVideoStream\";\n    ScryptedInterfaceMethod[\"getVideoStreamOptions\"] = \"getVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"getRecordingStream\"] = \"getRecordingStream\";\n    ScryptedInterfaceMethod[\"getRecordingStreamCurrentTime\"] = \"getRecordingStreamCurrentTime\";\n    ScryptedInterfaceMethod[\"getRecordingStreamOptions\"] = \"getRecordingStreamOptions\";\n    ScryptedInterfaceMethod[\"getRecordingStreamThumbnail\"] = \"getRecordingStreamThumbnail\";\n    ScryptedInterfaceMethod[\"ptzCommand\"] = \"ptzCommand\";\n    ScryptedInterfaceMethod[\"getRecordedEvents\"] = \"getRecordedEvents\";\n    ScryptedInterfaceMethod[\"getVideoClip\"] = \"getVideoClip\";\n    ScryptedInterfaceMethod[\"getVideoClipThumbnail\"] = \"getVideoClipThumbnail\";\n    ScryptedInterfaceMethod[\"getVideoClips\"] = \"getVideoClips\";\n    ScryptedInterfaceMethod[\"removeVideoClips\"] = \"removeVideoClips\";\n    ScryptedInterfaceMethod[\"setVideoStreamOptions\"] = \"setVideoStreamOptions\";\n    ScryptedInterfaceMethod[\"startIntercom\"] = \"startIntercom\";\n    ScryptedInterfaceMethod[\"stopIntercom\"] = \"stopIntercom\";\n    ScryptedInterfaceMethod[\"lock\"] = \"lock\";\n    ScryptedInterfaceMethod[\"unlock\"] = \"unlock\";\n    ScryptedInterfaceMethod[\"addPassword\"] = \"addPassword\";\n    ScryptedInterfaceMethod[\"getPasswords\"] = \"getPasswords\";\n    ScryptedInterfaceMethod[\"removePassword\"] = \"removePassword\";\n    ScryptedInterfaceMethod[\"activate\"] = \"activate\";\n    ScryptedInterfaceMethod[\"deactivate\"] = \"deactivate\";\n    ScryptedInterfaceMethod[\"isReversible\"] = \"isReversible\";\n    ScryptedInterfaceMethod[\"closeEntry\"] = \"closeEntry\";\n    ScryptedInterfaceMethod[\"openEntry\"] = \"openEntry\";\n    ScryptedInterfaceMethod[\"getDevice\"] = \"getDevice\";\n    ScryptedInterfaceMethod[\"releaseDevice\"] = \"releaseDevice\";\n    ScryptedInterfaceMethod[\"adoptDevice\"] = \"adoptDevice\";\n    ScryptedInterfaceMethod[\"discoverDevices\"] = \"discoverDevices\";\n    ScryptedInterfaceMethod[\"createDevice\"] = \"createDevice\";\n    ScryptedInterfaceMethod[\"getCreateDeviceSettings\"] = \"getCreateDeviceSettings\";\n    ScryptedInterfaceMethod[\"getRefreshFrequency\"] = \"getRefreshFrequency\";\n    ScryptedInterfaceMethod[\"refresh\"] = \"refresh\";\n    ScryptedInterfaceMethod[\"getMediaStatus\"] = \"getMediaStatus\";\n    ScryptedInterfaceMethod[\"load\"] = \"load\";\n    ScryptedInterfaceMethod[\"seek\"] = \"seek\";\n    ScryptedInterfaceMethod[\"skipNext\"] = \"skipNext\";\n    ScryptedInterfaceMethod[\"skipPrevious\"] = \"skipPrevious\";\n    ScryptedInterfaceMethod[\"convert\"] = \"convert\";\n    ScryptedInterfaceMethod[\"getSettings\"] = \"getSettings\";\n    ScryptedInterfaceMethod[\"putSetting\"] = \"putSetting\";\n    ScryptedInterfaceMethod[\"armSecuritySystem\"] = \"armSecuritySystem\";\n    ScryptedInterfaceMethod[\"disarmSecuritySystem\"] = \"disarmSecuritySystem\";\n    ScryptedInterfaceMethod[\"getReadmeMarkdown\"] = \"getReadmeMarkdown\";\n    ScryptedInterfaceMethod[\"getOauthUrl\"] = \"getOauthUrl\";\n    ScryptedInterfaceMethod[\"onOauthCallback\"] = \"onOauthCallback\";\n    ScryptedInterfaceMethod[\"canMixin\"] = \"canMixin\";\n    ScryptedInterfaceMethod[\"getMixin\"] = \"getMixin\";\n    ScryptedInterfaceMethod[\"releaseMixin\"] = \"releaseMixin\";\n    ScryptedInterfaceMethod[\"onRequest\"] = \"onRequest\";\n    ScryptedInterfaceMethod[\"onConnection\"] = \"onConnection\";\n    ScryptedInterfaceMethod[\"onPush\"] = \"onPush\";\n    ScryptedInterfaceMethod[\"run\"] = \"run\";\n    ScryptedInterfaceMethod[\"eval\"] = \"eval\";\n    ScryptedInterfaceMethod[\"loadScripts\"] = \"loadScripts\";\n    ScryptedInterfaceMethod[\"saveScript\"] = \"saveScript\";\n    ScryptedInterfaceMethod[\"trackObjects\"] = \"trackObjects\";\n    ScryptedInterfaceMethod[\"getDetectionInput\"] = \"getDetectionInput\";\n    ScryptedInterfaceMethod[\"getObjectTypes\"] = \"getObjectTypes\";\n    ScryptedInterfaceMethod[\"detectObjects\"] = \"detectObjects\";\n    ScryptedInterfaceMethod[\"generateObjectDetections\"] = \"generateObjectDetections\";\n    ScryptedInterfaceMethod[\"getDetectionModel\"] = \"getDetectionModel\";\n    ScryptedInterfaceMethod[\"setHumidity\"] = \"setHumidity\";\n    ScryptedInterfaceMethod[\"setFan\"] = \"setFan\";\n    ScryptedInterfaceMethod[\"startRTCSignalingSession\"] = \"startRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"createRTCSignalingSession\"] = \"createRTCSignalingSession\";\n    ScryptedInterfaceMethod[\"getScryptedUserAccessControl\"] = \"getScryptedUserAccessControl\";\n    ScryptedInterfaceMethod[\"generateVideoFrames\"] = \"generateVideoFrames\";\n})(ScryptedInterfaceMethod = exports.ScryptedInterfaceMethod || (exports.ScryptedInterfaceMethod = {}));\nexports.ScryptedInterfaceDescriptors = {\n    ScryptedDevice: {\n        name: 'ScryptedDevice',\n        methods: [\n            'listen',\n            'probe',\n            'setMixins',\n            'setName',\n            'setRoom',\n            'setType'\n        ],\n        properties: [\n            'id',\n            'info',\n            'interfaces',\n            'mixins',\n            'name',\n            'nativeId',\n            'pluginId',\n            'providedInterfaces',\n            'providedName',\n            'providedRoom',\n            'providedType',\n            'providerId',\n            'room',\n            'type'\n        ]\n    },\n    ScryptedPlugin: {\n        name: 'ScryptedPlugin',\n        methods: [\n            'getPluginJson'\n        ],\n        properties: []\n    },\n    OnOff: {\n        name: 'OnOff',\n        methods: [\n            'turnOff',\n            'turnOn'\n        ],\n        properties: [\n            'on'\n        ]\n    },\n    Brightness: {\n        name: 'Brightness',\n        methods: [\n            'setBrightness'\n        ],\n        properties: [\n            'brightness'\n        ]\n    },\n    ColorSettingTemperature: {\n        name: 'ColorSettingTemperature',\n        methods: [\n            'getTemperatureMaxK',\n            'getTemperatureMinK',\n            'setColorTemperature'\n        ],\n        properties: [\n            'colorTemperature'\n        ]\n    },\n    ColorSettingRgb: {\n        name: 'ColorSettingRgb',\n        methods: [\n            'setRgb'\n        ],\n        properties: [\n            'rgb'\n        ]\n    },\n    ColorSettingHsv: {\n        name: 'ColorSettingHsv',\n        methods: [\n            'setHsv'\n        ],\n        properties: [\n            'hsv'\n        ]\n    },\n    Notifier: {\n        name: 'Notifier',\n        methods: [\n            'sendNotification'\n        ],\n        properties: []\n    },\n    StartStop: {\n        name: 'StartStop',\n        methods: [\n            'start',\n            'stop'\n        ],\n        properties: [\n            'running'\n        ]\n    },\n    Pause: {\n        name: 'Pause',\n        methods: [\n            'pause',\n            'resume'\n        ],\n        properties: [\n            'paused'\n        ]\n    },\n    Dock: {\n        name: 'Dock',\n        methods: [\n            'dock'\n        ],\n        properties: [\n            'docked'\n        ]\n    },\n    TemperatureSetting: {\n        name: 'TemperatureSetting',\n        methods: [\n            'setTemperature',\n            'setThermostatMode',\n            'setThermostatSetpoint',\n            'setThermostatSetpointHigh',\n            'setThermostatSetpointLow'\n        ],\n        properties: [\n            'temperatureSetting',\n            'thermostatActiveMode',\n            'thermostatAvailableModes',\n            'thermostatMode',\n            'thermostatSetpoint',\n            'thermostatSetpointHigh',\n            'thermostatSetpointLow'\n        ]\n    },\n    Thermometer: {\n        name: 'Thermometer',\n        methods: [\n            'setTemperatureUnit'\n        ],\n        properties: [\n            'temperature',\n            'temperatureUnit'\n        ]\n    },\n    HumiditySensor: {\n        name: 'HumiditySensor',\n        methods: [],\n        properties: [\n            'humidity'\n        ]\n    },\n    Camera: {\n        name: 'Camera',\n        methods: [\n            'getPictureOptions',\n            'takePicture'\n        ],\n        properties: []\n    },\n    Microphone: {\n        name: 'Microphone',\n        methods: [\n            'getAudioStream'\n        ],\n        properties: []\n    },\n    Display: {\n        name: 'Display',\n        methods: [\n            'startDisplay',\n            'stopDisplay'\n        ],\n        properties: []\n    },\n    VideoCamera: {\n        name: 'VideoCamera',\n        methods: [\n            'getVideoStream',\n            'getVideoStreamOptions'\n        ],\n        properties: []\n    },\n    VideoRecorder: {\n        name: 'VideoRecorder',\n        methods: [\n            'getRecordingStream',\n            'getRecordingStreamCurrentTime',\n            'getRecordingStreamOptions',\n            'getRecordingStreamThumbnail'\n        ],\n        properties: []\n    },\n    PanTiltZoom: {\n        name: 'PanTiltZoom',\n        methods: [\n            'ptzCommand'\n        ],\n        properties: [\n            'ptzCapabilities'\n        ]\n    },\n    EventRecorder: {\n        name: 'EventRecorder',\n        methods: [\n            'getRecordedEvents'\n        ],\n        properties: []\n    },\n    VideoClips: {\n        name: 'VideoClips',\n        methods: [\n            'getVideoClip',\n            'getVideoClipThumbnail',\n            'getVideoClips',\n            'removeVideoClips'\n        ],\n        properties: []\n    },\n    VideoCameraConfiguration: {\n        name: 'VideoCameraConfiguration',\n        methods: [\n            'setVideoStreamOptions'\n        ],\n        properties: []\n    },\n    Intercom: {\n        name: 'Intercom',\n        methods: [\n            'startIntercom',\n            'stopIntercom'\n        ],\n        properties: []\n    },\n    Lock: {\n        name: 'Lock',\n        methods: [\n            'lock',\n            'unlock'\n        ],\n        properties: [\n            'lockState'\n        ]\n    },\n    PasswordStore: {\n        name: 'PasswordStore',\n        methods: [\n            'addPassword',\n            'getPasswords',\n            'removePassword'\n        ],\n        properties: []\n    },\n    Scene: {\n        name: 'Scene',\n        methods: [\n            'activate',\n            'deactivate',\n            'isReversible'\n        ],\n        properties: []\n    },\n    Entry: {\n        name: 'Entry',\n        methods: [\n            'closeEntry',\n            'openEntry'\n        ],\n        properties: []\n    },\n    EntrySensor: {\n        name: 'EntrySensor',\n        methods: [],\n        properties: [\n            'entryOpen'\n        ]\n    },\n    DeviceProvider: {\n        name: 'DeviceProvider',\n        methods: [\n            'getDevice',\n            'releaseDevice'\n        ],\n        properties: []\n    },\n    DeviceDiscovery: {\n        name: 'DeviceDiscovery',\n        methods: [\n            'adoptDevice',\n            'discoverDevices'\n        ],\n        properties: []\n    },\n    DeviceCreator: {\n        name: 'DeviceCreator',\n        methods: [\n            'createDevice',\n            'getCreateDeviceSettings'\n        ],\n        properties: []\n    },\n    Battery: {\n        name: 'Battery',\n        methods: [],\n        properties: [\n            'batteryLevel'\n        ]\n    },\n    Charger: {\n        name: 'Charger',\n        methods: [],\n        properties: [\n            'chargeState'\n        ]\n    },\n    Refresh: {\n        name: 'Refresh',\n        methods: [\n            'getRefreshFrequency',\n            'refresh'\n        ],\n        properties: []\n    },\n    MediaPlayer: {\n        name: 'MediaPlayer',\n        methods: [\n            'getMediaStatus',\n            'load',\n            'seek',\n            'skipNext',\n            'skipPrevious'\n        ],\n        properties: []\n    },\n    Online: {\n        name: 'Online',\n        methods: [],\n        properties: [\n            'online'\n        ]\n    },\n    BufferConverter: {\n        name: 'BufferConverter',\n        methods: [\n            'convert'\n        ],\n        properties: [\n            'fromMimeType',\n            'toMimeType'\n        ]\n    },\n    Settings: {\n        name: 'Settings',\n        methods: [\n            'getSettings',\n            'putSetting'\n        ],\n        properties: []\n    },\n    BinarySensor: {\n        name: 'BinarySensor',\n        methods: [],\n        properties: [\n            'binaryState'\n        ]\n    },\n    TamperSensor: {\n        name: 'TamperSensor',\n        methods: [],\n        properties: [\n            'tampered'\n        ]\n    },\n    PowerSensor: {\n        name: 'PowerSensor',\n        methods: [],\n        properties: [\n            'powerDetected'\n        ]\n    },\n    AudioSensor: {\n        name: 'AudioSensor',\n        methods: [],\n        properties: [\n            'audioDetected'\n        ]\n    },\n    MotionSensor: {\n        name: 'MotionSensor',\n        methods: [],\n        properties: [\n            'motionDetected'\n        ]\n    },\n    AmbientLightSensor: {\n        name: 'AmbientLightSensor',\n        methods: [],\n        properties: [\n            'ambientLight'\n        ]\n    },\n    OccupancySensor: {\n        name: 'OccupancySensor',\n        methods: [],\n        properties: [\n            'occupied'\n        ]\n    },\n    FloodSensor: {\n        name: 'FloodSensor',\n        methods: [],\n        properties: [\n            'flooded'\n        ]\n    },\n    UltravioletSensor: {\n        name: 'UltravioletSensor',\n        methods: [],\n        properties: [\n            'ultraviolet'\n        ]\n    },\n    LuminanceSensor: {\n        name: 'LuminanceSensor',\n        methods: [],\n        properties: [\n            'luminance'\n        ]\n    },\n    PositionSensor: {\n        name: 'PositionSensor',\n        methods: [],\n        properties: [\n            'position'\n        ]\n    },\n    SecuritySystem: {\n        name: 'SecuritySystem',\n        methods: [\n            'armSecuritySystem',\n            'disarmSecuritySystem'\n        ],\n        properties: [\n            'securitySystemState'\n        ]\n    },\n    PM10Sensor: {\n        name: 'PM10Sensor',\n        methods: [],\n        properties: [\n            'pm10Density'\n        ]\n    },\n    PM25Sensor: {\n        name: 'PM25Sensor',\n        methods: [],\n        properties: [\n            'pm25Density'\n        ]\n    },\n    VOCSensor: {\n        name: 'VOCSensor',\n        methods: [],\n        properties: [\n            'vocDensity'\n        ]\n    },\n    NOXSensor: {\n        name: 'NOXSensor',\n        methods: [],\n        properties: [\n            'noxDensity'\n        ]\n    },\n    CO2Sensor: {\n        name: 'CO2Sensor',\n        methods: [],\n        properties: [\n            'co2ppm'\n        ]\n    },\n    AirQualitySensor: {\n        name: 'AirQualitySensor',\n        methods: [],\n        properties: [\n            'airQuality'\n        ]\n    },\n    Readme: {\n        name: 'Readme',\n        methods: [\n            'getReadmeMarkdown'\n        ],\n        properties: []\n    },\n    OauthClient: {\n        name: 'OauthClient',\n        methods: [\n            'getOauthUrl',\n            'onOauthCallback'\n        ],\n        properties: []\n    },\n    MixinProvider: {\n        name: 'MixinProvider',\n        methods: [\n            'canMixin',\n            'getMixin',\n            'releaseMixin'\n        ],\n        properties: []\n    },\n    HttpRequestHandler: {\n        name: 'HttpRequestHandler',\n        methods: [\n            'onRequest'\n        ],\n        properties: []\n    },\n    EngineIOHandler: {\n        name: 'EngineIOHandler',\n        methods: [\n            'onConnection'\n        ],\n        properties: []\n    },\n    PushHandler: {\n        name: 'PushHandler',\n        methods: [\n            'onPush'\n        ],\n        properties: []\n    },\n    Program: {\n        name: 'Program',\n        methods: [\n            'run'\n        ],\n        properties: []\n    },\n    Scriptable: {\n        name: 'Scriptable',\n        methods: [\n            'eval',\n            'loadScripts',\n            'saveScript'\n        ],\n        properties: []\n    },\n    ObjectTracker: {\n        name: 'ObjectTracker',\n        methods: [\n            'trackObjects'\n        ],\n        properties: []\n    },\n    ObjectDetector: {\n        name: 'ObjectDetector',\n        methods: [\n            'getDetectionInput',\n            'getObjectTypes'\n        ],\n        properties: []\n    },\n    ObjectDetection: {\n        name: 'ObjectDetection',\n        methods: [\n            'detectObjects',\n            'generateObjectDetections',\n            'getDetectionModel'\n        ],\n        properties: []\n    },\n    HumiditySetting: {\n        name: 'HumiditySetting',\n        methods: [\n            'setHumidity'\n        ],\n        properties: [\n            'humiditySetting'\n        ]\n    },\n    Fan: {\n        name: 'Fan',\n        methods: [\n            'setFan'\n        ],\n        properties: [\n            'fan'\n        ]\n    },\n    RTCSignalingChannel: {\n        name: 'RTCSignalingChannel',\n        methods: [\n            'startRTCSignalingSession'\n        ],\n        properties: []\n    },\n    RTCSignalingClient: {\n        name: 'RTCSignalingClient',\n        methods: [\n            'createRTCSignalingSession'\n        ],\n        properties: []\n    },\n    LauncherApplication: {\n        name: 'LauncherApplication',\n        methods: [],\n        properties: [\n            'applicationInfo'\n        ]\n    },\n    ScryptedUser: {\n        name: 'ScryptedUser',\n        methods: [\n            'getScryptedUserAccessControl'\n        ],\n        properties: []\n    },\n    VideoFrameGenerator: {\n        name: 'VideoFrameGenerator',\n        methods: [\n            'generateVideoFrames'\n        ],\n        properties: []\n    }\n};\n/**\n * @category Core Reference\n */\nvar ScryptedDeviceType;\n(function (ScryptedDeviceType) {\n    ScryptedDeviceType[\"Builtin\"] = \"Builtin\";\n    ScryptedDeviceType[\"Camera\"] = \"Camera\";\n    ScryptedDeviceType[\"Fan\"] = \"Fan\";\n    ScryptedDeviceType[\"Light\"] = \"Light\";\n    ScryptedDeviceType[\"Switch\"] = \"Switch\";\n    ScryptedDeviceType[\"Outlet\"] = \"Outlet\";\n    ScryptedDeviceType[\"Sensor\"] = \"Sensor\";\n    ScryptedDeviceType[\"Scene\"] = \"Scene\";\n    ScryptedDeviceType[\"Program\"] = \"Program\";\n    ScryptedDeviceType[\"Automation\"] = \"Automation\";\n    ScryptedDeviceType[\"Vacuum\"] = \"Vacuum\";\n    ScryptedDeviceType[\"Notifier\"] = \"Notifier\";\n    ScryptedDeviceType[\"Thermostat\"] = \"Thermostat\";\n    ScryptedDeviceType[\"Lock\"] = \"Lock\";\n    ScryptedDeviceType[\"PasswordControl\"] = \"PasswordControl\";\n    /**\n     * Displays have audio and video output.\n     */\n    ScryptedDeviceType[\"Display\"] = \"Display\";\n    /**\n     * Smart Displays have two way audio and video.\n     */\n    ScryptedDeviceType[\"SmartDisplay\"] = \"SmartDisplay\";\n    ScryptedDeviceType[\"Speaker\"] = \"Speaker\";\n    /**\n     * Smart Speakers have two way audio.\n     */\n    ScryptedDeviceType[\"SmartSpeaker\"] = \"SmartSpeaker\";\n    ScryptedDeviceType[\"Event\"] = \"Event\";\n    ScryptedDeviceType[\"Entry\"] = \"Entry\";\n    ScryptedDeviceType[\"Garage\"] = \"Garage\";\n    ScryptedDeviceType[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedDeviceType[\"DataSource\"] = \"DataSource\";\n    ScryptedDeviceType[\"API\"] = \"API\";\n    ScryptedDeviceType[\"Doorbell\"] = \"Doorbell\";\n    ScryptedDeviceType[\"Irrigation\"] = \"Irrigation\";\n    ScryptedDeviceType[\"Valve\"] = \"Valve\";\n    ScryptedDeviceType[\"Person\"] = \"Person\";\n    ScryptedDeviceType[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedDeviceType[\"WindowCovering\"] = \"WindowCovering\";\n    ScryptedDeviceType[\"Siren\"] = \"Siren\";\n    ScryptedDeviceType[\"Unknown\"] = \"Unknown\";\n})(ScryptedDeviceType = exports.ScryptedDeviceType || (exports.ScryptedDeviceType = {}));\nvar HumidityMode;\n(function (HumidityMode) {\n    HumidityMode[\"Humidify\"] = \"Humidify\";\n    HumidityMode[\"Dehumidify\"] = \"Dehumidify\";\n    HumidityMode[\"Auto\"] = \"Auto\";\n    HumidityMode[\"Off\"] = \"Off\";\n})(HumidityMode = exports.HumidityMode || (exports.HumidityMode = {}));\nvar FanMode;\n(function (FanMode) {\n    FanMode[\"Auto\"] = \"Auto\";\n    FanMode[\"Manual\"] = \"Manual\";\n})(FanMode = exports.FanMode || (exports.FanMode = {}));\nvar TemperatureUnit;\n(function (TemperatureUnit) {\n    TemperatureUnit[\"C\"] = \"C\";\n    TemperatureUnit[\"F\"] = \"F\";\n})(TemperatureUnit = exports.TemperatureUnit || (exports.TemperatureUnit = {}));\nvar ThermostatMode;\n(function (ThermostatMode) {\n    ThermostatMode[\"Off\"] = \"Off\";\n    ThermostatMode[\"Cool\"] = \"Cool\";\n    ThermostatMode[\"Heat\"] = \"Heat\";\n    ThermostatMode[\"HeatCool\"] = \"HeatCool\";\n    ThermostatMode[\"Auto\"] = \"Auto\";\n    ThermostatMode[\"FanOnly\"] = \"FanOnly\";\n    ThermostatMode[\"Purifier\"] = \"Purifier\";\n    ThermostatMode[\"Eco\"] = \"Eco\";\n    ThermostatMode[\"Dry\"] = \"Dry\";\n    ThermostatMode[\"On\"] = \"On\";\n})(ThermostatMode = exports.ThermostatMode || (exports.ThermostatMode = {}));\nvar PanTiltZoomMovement;\n(function (PanTiltZoomMovement) {\n    PanTiltZoomMovement[\"Absolute\"] = \"Absolute\";\n    PanTiltZoomMovement[\"Relative\"] = \"Relative\";\n})(PanTiltZoomMovement = exports.PanTiltZoomMovement || (exports.PanTiltZoomMovement = {}));\nvar LockState;\n(function (LockState) {\n    LockState[\"Locked\"] = \"Locked\";\n    LockState[\"Unlocked\"] = \"Unlocked\";\n    LockState[\"Jammed\"] = \"Jammed\";\n})(LockState = exports.LockState || (exports.LockState = {}));\nvar ChargeState;\n(function (ChargeState) {\n    ChargeState[\"Trickle\"] = \"trickle\";\n    ChargeState[\"Charging\"] = \"charging\";\n    ChargeState[\"NotCharging\"] = \"not-charging\";\n})(ChargeState = exports.ChargeState || (exports.ChargeState = {}));\nvar AirQuality;\n(function (AirQuality) {\n    AirQuality[\"Unknown\"] = \"Unknown\";\n    AirQuality[\"Excellent\"] = \"Excellent\";\n    AirQuality[\"Good\"] = \"Good\";\n    AirQuality[\"Fair\"] = \"Fair\";\n    AirQuality[\"Inferior\"] = \"Inferior\";\n    AirQuality[\"Poor\"] = \"Poor\";\n})(AirQuality = exports.AirQuality || (exports.AirQuality = {}));\nvar SecuritySystemMode;\n(function (SecuritySystemMode) {\n    SecuritySystemMode[\"Disarmed\"] = \"Disarmed\";\n    SecuritySystemMode[\"HomeArmed\"] = \"HomeArmed\";\n    SecuritySystemMode[\"AwayArmed\"] = \"AwayArmed\";\n    SecuritySystemMode[\"NightArmed\"] = \"NightArmed\";\n})(SecuritySystemMode = exports.SecuritySystemMode || (exports.SecuritySystemMode = {}));\nvar SecuritySystemObstruction;\n(function (SecuritySystemObstruction) {\n    SecuritySystemObstruction[\"Sensor\"] = \"Sensor\";\n    SecuritySystemObstruction[\"Occupied\"] = \"Occupied\";\n    SecuritySystemObstruction[\"Time\"] = \"Time\";\n    SecuritySystemObstruction[\"Error\"] = \"Error\";\n})(SecuritySystemObstruction = exports.SecuritySystemObstruction || (exports.SecuritySystemObstruction = {}));\nvar MediaPlayerState;\n(function (MediaPlayerState) {\n    MediaPlayerState[\"Idle\"] = \"Idle\";\n    MediaPlayerState[\"Playing\"] = \"Playing\";\n    MediaPlayerState[\"Paused\"] = \"Paused\";\n    MediaPlayerState[\"Buffering\"] = \"Buffering\";\n})(MediaPlayerState = exports.MediaPlayerState || (exports.MediaPlayerState = {}));\nvar ScryptedInterface;\n(function (ScryptedInterface) {\n    ScryptedInterface[\"ScryptedDevice\"] = \"ScryptedDevice\";\n    ScryptedInterface[\"ScryptedPlugin\"] = \"ScryptedPlugin\";\n    ScryptedInterface[\"OnOff\"] = \"OnOff\";\n    ScryptedInterface[\"Brightness\"] = \"Brightness\";\n    ScryptedInterface[\"ColorSettingTemperature\"] = \"ColorSettingTemperature\";\n    ScryptedInterface[\"ColorSettingRgb\"] = \"ColorSettingRgb\";\n    ScryptedInterface[\"ColorSettingHsv\"] = \"ColorSettingHsv\";\n    ScryptedInterface[\"Notifier\"] = \"Notifier\";\n    ScryptedInterface[\"StartStop\"] = \"StartStop\";\n    ScryptedInterface[\"Pause\"] = \"Pause\";\n    ScryptedInterface[\"Dock\"] = \"Dock\";\n    ScryptedInterface[\"TemperatureSetting\"] = \"TemperatureSetting\";\n    ScryptedInterface[\"Thermometer\"] = \"Thermometer\";\n    ScryptedInterface[\"HumiditySensor\"] = \"HumiditySensor\";\n    ScryptedInterface[\"Camera\"] = \"Camera\";\n    ScryptedInterface[\"Microphone\"] = \"Microphone\";\n    ScryptedInterface[\"Display\"] = \"Display\";\n    ScryptedInterface[\"VideoCamera\"] = \"VideoCamera\";\n    ScryptedInterface[\"VideoRecorder\"] = \"VideoRecorder\";\n    ScryptedInterface[\"PanTiltZoom\"] = \"PanTiltZoom\";\n    ScryptedInterface[\"EventRecorder\"] = \"EventRecorder\";\n    ScryptedInterface[\"VideoClips\"] = \"VideoClips\";\n    ScryptedInterface[\"VideoCameraConfiguration\"] = \"VideoCameraConfiguration\";\n    ScryptedInterface[\"Intercom\"] = \"Intercom\";\n    ScryptedInterface[\"Lock\"] = \"Lock\";\n    ScryptedInterface[\"PasswordStore\"] = \"PasswordStore\";\n    ScryptedInterface[\"Scene\"] = \"Scene\";\n    ScryptedInterface[\"Entry\"] = \"Entry\";\n    ScryptedInterface[\"EntrySensor\"] = \"EntrySensor\";\n    ScryptedInterface[\"DeviceProvider\"] = \"DeviceProvider\";\n    ScryptedInterface[\"DeviceDiscovery\"] = \"DeviceDiscovery\";\n    ScryptedInterface[\"DeviceCreator\"] = \"DeviceCreator\";\n    ScryptedInterface[\"Battery\"] = \"Battery\";\n    ScryptedInterface[\"Charger\"] = \"Charger\";\n    ScryptedInterface[\"Refresh\"] = \"Refresh\";\n    ScryptedInterface[\"MediaPlayer\"] = \"MediaPlayer\";\n    ScryptedInterface[\"Online\"] = \"Online\";\n    ScryptedInterface[\"BufferConverter\"] = \"BufferConverter\";\n    ScryptedInterface[\"Settings\"] = \"Settings\";\n    ScryptedInterface[\"BinarySensor\"] = \"BinarySensor\";\n    ScryptedInterface[\"TamperSensor\"] = \"TamperSensor\";\n    ScryptedInterface[\"PowerSensor\"] = \"PowerSensor\";\n    ScryptedInterface[\"AudioSensor\"] = \"AudioSensor\";\n    ScryptedInterface[\"MotionSensor\"] = \"MotionSensor\";\n    ScryptedInterface[\"AmbientLightSensor\"] = \"AmbientLightSensor\";\n    ScryptedInterface[\"OccupancySensor\"] = \"OccupancySensor\";\n    ScryptedInterface[\"FloodSensor\"] = \"FloodSensor\";\n    ScryptedInterface[\"UltravioletSensor\"] = \"UltravioletSensor\";\n    ScryptedInterface[\"LuminanceSensor\"] = \"LuminanceSensor\";\n    ScryptedInterface[\"PositionSensor\"] = \"PositionSensor\";\n    ScryptedInterface[\"SecuritySystem\"] = \"SecuritySystem\";\n    ScryptedInterface[\"PM10Sensor\"] = \"PM10Sensor\";\n    ScryptedInterface[\"PM25Sensor\"] = \"PM25Sensor\";\n    ScryptedInterface[\"VOCSensor\"] = \"VOCSensor\";\n    ScryptedInterface[\"NOXSensor\"] = \"NOXSensor\";\n    ScryptedInterface[\"CO2Sensor\"] = \"CO2Sensor\";\n    ScryptedInterface[\"AirQualitySensor\"] = \"AirQualitySensor\";\n    ScryptedInterface[\"Readme\"] = \"Readme\";\n    ScryptedInterface[\"OauthClient\"] = \"OauthClient\";\n    ScryptedInterface[\"MixinProvider\"] = \"MixinProvider\";\n    ScryptedInterface[\"HttpRequestHandler\"] = \"HttpRequestHandler\";\n    ScryptedInterface[\"EngineIOHandler\"] = \"EngineIOHandler\";\n    ScryptedInterface[\"PushHandler\"] = \"PushHandler\";\n    ScryptedInterface[\"Program\"] = \"Program\";\n    ScryptedInterface[\"Scriptable\"] = \"Scriptable\";\n    ScryptedInterface[\"ObjectTracker\"] = \"ObjectTracker\";\n    ScryptedInterface[\"ObjectDetector\"] = \"ObjectDetector\";\n    ScryptedInterface[\"ObjectDetection\"] = \"ObjectDetection\";\n    ScryptedInterface[\"HumiditySetting\"] = \"HumiditySetting\";\n    ScryptedInterface[\"Fan\"] = \"Fan\";\n    ScryptedInterface[\"RTCSignalingChannel\"] = \"RTCSignalingChannel\";\n    ScryptedInterface[\"RTCSignalingClient\"] = \"RTCSignalingClient\";\n    ScryptedInterface[\"LauncherApplication\"] = \"LauncherApplication\";\n    ScryptedInterface[\"ScryptedUser\"] = \"ScryptedUser\";\n    ScryptedInterface[\"VideoFrameGenerator\"] = \"VideoFrameGenerator\";\n})(ScryptedInterface = exports.ScryptedInterface || (exports.ScryptedInterface = {}));\nvar ScryptedMimeTypes;\n(function (ScryptedMimeTypes) {\n    ScryptedMimeTypes[\"Url\"] = \"text/x-uri\";\n    ScryptedMimeTypes[\"InsecureLocalUrl\"] = \"text/x-insecure-local-uri\";\n    ScryptedMimeTypes[\"LocalUrl\"] = \"text/x-local-uri\";\n    ScryptedMimeTypes[\"PushEndpoint\"] = \"text/x-push-endpoint\";\n    ScryptedMimeTypes[\"SchemePrefix\"] = \"x-scrypted/x-scrypted-scheme-\";\n    ScryptedMimeTypes[\"MediaStreamUrl\"] = \"text/x-media-url\";\n    ScryptedMimeTypes[\"MediaObject\"] = \"x-scrypted/x-scrypted-media-object\";\n    ScryptedMimeTypes[\"RequestMediaObject\"] = \"x-scrypted/x-scrypted-request-media-object\";\n    ScryptedMimeTypes[\"RequestMediaStream\"] = \"x-scrypted/x-scrypted-request-stream\";\n    ScryptedMimeTypes[\"MediaStreamFeedback\"] = \"x-scrypted/x-media-stream-feedback\";\n    ScryptedMimeTypes[\"FFmpegInput\"] = \"x-scrypted/x-ffmpeg-input\";\n    ScryptedMimeTypes[\"FFmpegTranscodeStream\"] = \"x-scrypted/x-ffmpeg-transcode-stream\";\n    ScryptedMimeTypes[\"RTCSignalingChannel\"] = \"x-scrypted/x-scrypted-rtc-signaling-channel\";\n    ScryptedMimeTypes[\"RTCSignalingSession\"] = \"x-scrypted/x-scrypted-rtc-signaling-session\";\n    ScryptedMimeTypes[\"RTCConnectionManagement\"] = \"x-scrypted/x-scrypted-rtc-connection-management\";\n    ScryptedMimeTypes[\"Image\"] = \"x-scrypted/x-scrypted-image\";\n})(ScryptedMimeTypes = exports.ScryptedMimeTypes || (exports.ScryptedMimeTypes = {}));\n//# sourceMappingURL=index.js.map","export * from '@scrypted/server/src/media-helpers';\n","import sdk, { FFmpegInput, MediaObject, ObjectDetection, ObjectDetectionCallbacks, ObjectDetectionGeneratorResult, ObjectDetectionGeneratorSession, ObjectDetectionModel, ObjectDetectionResult, ObjectDetectionSession, ObjectsDetected, ScryptedDeviceBase, ScryptedInterface, ScryptedMimeTypes, VideoFrame } from '@scrypted/sdk';\nimport child_process, { ChildProcess } from 'child_process';\nimport { ffmpegLogInitialOutput, safeKillFFmpeg, safePrintFFmpegArguments } from \"../../../common/src/media-helpers\";\n\nimport PD from 'pam-diff';\nimport P2P from 'pipe2pam';\nimport { PassThrough, Writable } from 'stream';\n\nconst { mediaManager } = sdk;\n\nconst defaultDifference = 9;\nconst defaultPercentage = 2;\n\ninterface PamDiffSession {\n    id: string;\n    timeout?: NodeJS.Timeout;\n    cp?: ChildProcess;\n    pamDiff?: any;\n    callbacks: ObjectDetectionCallbacks;\n}\n\nclass PamDiff extends ScryptedDeviceBase implements ObjectDetection {\n    sessions = new Map<string, PamDiffSession>();\n\n    endSession(id: string) {\n        const pds = this.sessions.get(id);\n        if (!pds)\n            return;\n        this.sessions.delete(pds.id);\n        const event: ObjectsDetected = {\n            timestamp: Date.now(),\n            running: false,\n            detectionId: pds.id,\n        }\n        clearTimeout(pds.timeout);\n        safeKillFFmpeg(pds.cp);\n        if (pds.callbacks) {\n            pds.callbacks.onDetectionEnded(event);\n        }\n        else {\n            this.onDeviceEvent(ScryptedInterface.ObjectDetection, event);\n        }\n    }\n\n    reschedule(id: string, duration: number,) {\n        const pds = this.sessions.get(id);\n        if (!pds)\n            return;\n        clearTimeout(pds.timeout);\n        pds.timeout = setTimeout(() => this.endSession(id), duration);\n    }\n\n    async * generateObjectDetectionsInternal(videoFrames: AsyncGenerator<VideoFrame, any, unknown>, session: ObjectDetectionGeneratorSession): AsyncGenerator<ObjectDetectionGeneratorResult, any, unknown> {\n        videoFrames = await sdk.connectRPCObject(videoFrames);\n\n        const width = 640;\n        const height = 360;\n        const p2p: Writable = new P2P();\n        const pt = new PassThrough();\n        const pamDiff = new PD({\n            difference: parseInt(session.settings?.difference) || defaultDifference,\n            percent: parseInt(session.settings?.percent) || defaultPercentage,\n            response: session?.settings?.motionAsObjects ? 'blobs' : 'percent',\n        });\n        pt.pipe(p2p).pipe(pamDiff);\n\n        const queued: ObjectsDetected[] = [];\n        pamDiff.on('diff', async (data: any) => {\n            const trigger = data.trigger[0];\n            // console.log(trigger.blobs.length);\n            const { blobs } = trigger;\n\n            const detections: ObjectDetectionResult[] = [];\n            if (blobs?.length) {\n                for (const blob of blobs) {\n                    detections.push(\n                        {\n                            className: 'motion',\n                            score: 1,\n                            boundingBox: [blob.minX, blob.minY, blob.maxX - blob.minX, blob.maxY - blob.minY],\n                        }\n                    )\n                }\n            }\n            else {\n                detections.push(\n                    {\n                        className: 'motion',\n                        score: trigger.percent / 100,\n                    }\n                )\n            }\n            const event: ObjectsDetected = {\n                timestamp: Date.now(),\n                running: true,\n                inputDimensions: [width, height],\n                detections,\n            }\n            queued.push(event);\n        });\n\n\n        for await (const videoFrame of videoFrames) {\n            const header = `P7\nWIDTH ${width}\nHEIGHT ${height}\nDEPTH 3\nMAXVAL 255\nTUPLTYPE RGB\nENDHDR\n`;\n\n            const buffer = await videoFrame.toBuffer({\n                resize: {\n                    width,\n                    height,\n                },\n                format: 'rgb',\n            });\n            pt.write(Buffer.from(header));\n            pt.write(buffer);\n\n            if (!queued.length) {\n                yield {\n                    __json_copy_serialize_children: true,\n                    videoFrame,\n                    detected: {\n                        timestamp: Date.now(),\n                        detections: [],\n                    }\n                }\n            }\n            while (queued.length) {\n                yield {\n                    __json_copy_serialize_children: true,\n                    detected: queued.pop(),\n                    videoFrame,\n                };\n            }\n        }\n    }\n\n\n    async generateObjectDetections(videoFrames: AsyncGenerator<VideoFrame, any, unknown>, session: ObjectDetectionGeneratorSession): Promise<AsyncGenerator<ObjectDetectionGeneratorResult, any, unknown>> {\n        return this.generateObjectDetectionsInternal(videoFrames, session);\n    }\n\n    async detectObjects(mediaObject: MediaObject, session?: ObjectDetectionSession, callbacks?: ObjectDetectionCallbacks): Promise<ObjectsDetected> {\n        if (mediaObject && mediaObject.mimeType?.startsWith('image/'))\n            throw new Error('can not run motion detection on image')\n\n        let { detectionId } = session;\n        let pds = this.sessions.get(detectionId);\n        if (pds)\n            pds.callbacks = callbacks;\n\n        if (!session?.duration) {\n            this.endSession(detectionId);\n            return {\n                detectionId,\n                running: false,\n                timestamp: Date.now(),\n            }\n        }\n\n        if (pds) {\n            this.reschedule(detectionId, session.duration);\n            pds.pamDiff.setDifference(session.settings?.difference || defaultDifference).setPercent(session.settings?.percent || defaultPercentage);\n            return {\n                detectionId,\n                running: true,\n                timestamp: Date.now(),\n            };\n        }\n\n        // unable to start/extend this session.\n        if (!mediaObject) {\n            this.endSession(detectionId);\n            return {\n                detectionId,\n                running: false,\n                timestamp: Date.now(),\n            }\n        }\n\n        const ffmpeg = await mediaManager.getFFmpegPath();\n        const ffmpegInput: FFmpegInput = JSON.parse((await mediaManager.convertMediaObjectToBuffer(\n            mediaObject,\n            ScryptedMimeTypes.FFmpegInput\n        )).toString());\n\n        pds = {\n            id: detectionId,\n            callbacks,\n        }\n        this.reschedule(detectionId, session.duration);\n\n        const args = ffmpegInput.inputArguments.slice();\n        args.unshift(\n            '-hide_banner',\n            ...ffmpegInput.videoDecoderArguments || [],\n        )\n        args.push(\n            '-an', '-dn',\n            '-c:v',\n            'pam',\n            '-pix_fmt',\n            'rgb24',\n            '-f',\n            'image2pipe',\n            '-vf',\n            `fps=2,scale=640:360`,\n            'pipe:3',\n        );\n\n        const p2p = new P2P();\n        const pamDiff = new PD({\n            difference: session.settings?.difference || defaultDifference,\n            percent: session.settings?.percent || defaultPercentage,\n            response: session?.settings?.motionAsObjects ? 'blobs' : 'percent',\n        });\n\n        pamDiff.on('diff', async (data: any) => {\n            const trigger = data.trigger[0];\n            // console.log(trigger.blobs.length);\n            const { blobs } = trigger;\n\n            const detections: ObjectDetectionResult[] = [];\n            if (blobs?.length) {\n                for (const blob of blobs) {\n                    detections.push(\n                        {\n                            className: 'motion',\n                            score: 1,\n                            boundingBox: [blob.minX, blob.minY, blob.maxX - blob.minX, blob.maxY - blob.minY],\n                        }\n                    )\n                }\n            }\n            else {\n                detections.push(\n                    {\n                        className: 'motion',\n                        score: 1,\n                    }\n                )\n            }\n            const event: ObjectsDetected = {\n                timestamp: Date.now(),\n                running: true,\n                detectionId: pds.id,\n                inputDimensions: [640, 360],\n                detections,\n            }\n            if (pds.callbacks) {\n                pds.callbacks.onDetection(event);\n            }\n            else {\n                this.onDeviceEvent(ScryptedInterface.ObjectDetection, event);\n            }\n        });\n\n        const console = sdk.deviceManager.getMixinConsole(mediaObject.sourceId, this.nativeId);\n\n        pds.pamDiff = pamDiff;\n        pds.pamDiff\n            .setDifference(session.settings?.difference || defaultDifference)\n            .setPercent(session.settings?.percent || defaultPercentage)\n            .setResponse(session?.settings?.motionAsObjects ? 'blobs' : 'percent');;\n        safePrintFFmpegArguments(console, args);\n        pds.cp = child_process.spawn(ffmpeg, args, {\n            stdio: ['inherit', 'pipe', 'pipe', 'pipe']\n        });\n        let pamTimeout: NodeJS.Timeout;\n        const resetTimeout = () => {\n            clearTimeout(pamTimeout);\n            pamTimeout = setTimeout(() => {\n                const check = this.sessions.get(detectionId);\n                if (check !== pds)\n                    return;\n                console.error('PAM image stream timed out. Ending session.');\n                this.endSession(detectionId);\n            }, 60000);\n        }\n        p2p.on('data', () => {\n            resetTimeout();\n        })\n        resetTimeout();\n        pds.cp.stdio[3].pipe(p2p as any).pipe(pamDiff as any);\n        pds.cp.on('exit', () => this.endSession(detectionId));\n        ffmpegLogInitialOutput(console, pds.cp);\n\n        this.sessions.set(detectionId, pds);\n\n        return {\n            detectionId,\n            running: true,\n            timestamp: Date.now(),\n        }\n    }\n\n    async getDetectionModel(): Promise<ObjectDetectionModel> {\n        return {\n            name: '@scrypted/pam-diff',\n            classes: ['motion'],\n            inputFormat: 'rgb',\n            inputSize: [640, 360],\n            settings: [\n                {\n                    title: 'Motion Difference',\n                    description: 'The color difference required to trigger motion on a pixel.',\n                    key: 'difference',\n                    value: this.storage.getItem('difference') || defaultDifference,\n                    type: 'number',\n                },\n                {\n                    title: 'Motion Percent',\n                    description: 'The percentage of pixels required to trigger motion',\n                    key: 'percent',\n                    value: this.storage.getItem('percent]') || defaultPercentage,\n                    type: 'number',\n                }\n            ]\n        }\n    }\n}\n\nexport default PamDiff;\n","import { ChildProcess } from \"child_process\";\nimport process from 'process';\n\nconst filtered = [\n    'decode_slice_header error',\n    'no frame!',\n    'non-existing PPS',\n];\n\nexport function safeKillFFmpeg(cp: ChildProcess) {\n    if (!cp)\n        return;\n    // this will allow ffmpeg to send rtsp TEARDOWN etc\n    try {\n        cp.stdin.write('q\\n');\n    }\n    catch (e) {\n    }\n    setTimeout(() => {\n        cp.kill();\n        setTimeout(() => {\n            cp.kill('SIGKILL');\n        }, 2000);\n    }, 2000);\n}\n\nexport function ffmpegLogInitialOutput(console: Console, cp: ChildProcess, forever?: boolean, storage?: Storage) {\n    if (!console)\n        return;\n\n    const SCRYPTED_FFMPEG_NOISY = !!process.env.SCRYPTED_FFMPEG_NOISY || !!storage?.getItem('SCRYPTED_FFMPEG_NOISY');\n\n    function logger(log: (str: string) => void): (buffer: Buffer) => void {\n        const ret = (buffer: Buffer) => {\n            const str = buffer.toString();\n\n            for (const filter of filtered) {\n                if (str.indexOf(filter) !== -1)\n                    return;\n            }\n\n            if (!SCRYPTED_FFMPEG_NOISY && !forever && (str.indexOf('frame=') !== -1 || str.indexOf('size=') !== -1)) {\n                log(str);\n                log('video/audio detected, discarding further input');\n                cp.stdout.removeListener('data', ret);\n                cp.stderr.removeListener('data', ret);\n                return;\n            }\n\n            log(str);\n        }\n\n        return ret;\n    };\n    cp.stdout?.on('data', logger(console.log));\n    cp.stderr?.on('data', logger(console.error));\n    cp.on('exit', () => console.log('ffmpeg exited'));\n}\n\nexport function safePrintFFmpegArguments(console: Console, args: string[]) {\n    if (!console)\n        return;\n    const ret = [];\n    let redactNext = false;\n    for (const arg of args) {\n        try {\n            if (redactNext) {\n                const url = new URL(arg);\n                ret.push(`${url.protocol}[REDACTED]`)\n            }\n            else {\n                ret.push(arg);\n            }\n        }\n        catch (e) {\n            ret.push(arg);\n        }\n\n        // input arguments may contain passwords.\n        redactNext = arg === '-i';\n    }\n\n    console.log(ret.join(' '));\n}\n","\n                        const e = __non_webpack_require__('pam-diff');\n                        module.exports = e;\n                    ","module.exports = require(\"child_process\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(360);\n"],"names":["util","Transform","Pipe2Pam","this","call","writableObjectMode","readableObjectMode","_parseChunk","_findHeaders","inherits","prototype","_parseHeaders","data","headersArr","toString","toLowerCase","split","headersObj","headerArr","i","length","chunk","_soi","_headers","slice","_loh","_lop","width","height","depth","maxval","_loi","_eoi","_findPam","_chunks","_chunksLength","_chunksTotalLength","chunkLength","push","buffer","Buffer","concat","pam","headers","pixels","tupltype","chunks","_readableState","pipesCount","listenerCount","emit","divided","Math","floor","remainder","soi","sop","eoi","_transform","encoding","callback","_flush","resetCache","module","exports","__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","p","hasOwnProperty","value","MixinDeviceBase","ScryptedDeviceBase","index_1","DeviceBase","constructor","nativeId","super","storage","_storage","deviceManager","getDeviceStorage","log","_log","getDeviceLogger","console","_console","getDeviceConsole","async","mimeType","mediaManager","createMediaObject","sourceId","id","getMediaObjectConsole","mediaObject","getMixinConsole","_lazyLoadDeviceState","_deviceState","getDeviceState","onDeviceEvent","eventInterface","eventData","options","_listeners","Set","systemManager","getDeviceById","mixinDevice","mixinDeviceInterfaces","mixinStorageSuffix","mixinDeviceState","__rpcproxy_traps_all_properties","createDeviceState","setState","mixinProviderNativeId","mixinStorageKey","getMixinStorage","onMixinEvent","manageListener","listener","add","release","l","removeListener","_createGetState","state","_createSetState","warn","field","values","ScryptedInterfaceProperty","set","sdk","runtimeAPI","pluginRuntimeAPI","e","assign","endpointManager","pluginHostAPI","setScryptedInterfaceDescriptors","TYPES_VERSION","ScryptedInterfaceDescriptors","catch","error","ScryptedMimeTypes","ScryptedInterface","MediaPlayerState","SecuritySystemObstruction","SecuritySystemMode","AirQuality","ChargeState","LockState","PanTiltZoomMovement","ThermostatMode","TemperatureUnit","FanMode","HumidityMode","ScryptedDeviceType","ScryptedInterfaceMethod","ScryptedDevice","name","methods","properties","ScryptedPlugin","OnOff","Brightness","ColorSettingTemperature","ColorSettingRgb","ColorSettingHsv","Notifier","StartStop","Pause","Dock","TemperatureSetting","Thermometer","HumiditySensor","Camera","Microphone","Display","VideoCamera","VideoRecorder","PanTiltZoom","EventRecorder","VideoClips","VideoCameraConfiguration","Intercom","Lock","PasswordStore","Scene","Entry","EntrySensor","DeviceProvider","DeviceDiscovery","DeviceCreator","Battery","Charger","Refresh","MediaPlayer","Online","BufferConverter","Settings","BinarySensor","TamperSensor","PowerSensor","AudioSensor","MotionSensor","AmbientLightSensor","OccupancySensor","FloodSensor","UltravioletSensor","LuminanceSensor","PositionSensor","SecuritySystem","PM10Sensor","PM25Sensor","VOCSensor","NOXSensor","CO2Sensor","AirQualitySensor","Readme","OauthClient","MixinProvider","HttpRequestHandler","EngineIOHandler","PushHandler","Program","Scriptable","ObjectTracker","ObjectDetector","ObjectDetection","HumiditySetting","Fan","RTCSignalingChannel","RTCSignalingClient","LauncherApplication","ScryptedUser","VideoFrameGenerator","PamDiff","sessions","Map","endSession","pds","delete","event","timestamp","Date","now","running","detectionId","clearTimeout","timeout","safeKillFFmpeg","cp","callbacks","onDetectionEnded","reschedule","duration","setTimeout","videoFrames","session","connectRPCObject","p2p","pt","PassThrough","pamDiff","difference","parseInt","settings","percent","response","motionAsObjects","pipe","queued","on","trigger","blobs","detections","blob","className","score","boundingBox","minX","minY","maxX","maxY","inputDimensions","videoFrame","header","toBuffer","resize","format","write","from","__json_copy_serialize_children","detected","pop","generateObjectDetectionsInternal","startsWith","Error","setDifference","setPercent","ffmpeg","getFFmpegPath","ffmpegInput","JSON","parse","convertMediaObjectToBuffer","FFmpegInput","args","inputArguments","unshift","videoDecoderArguments","onDetection","pamTimeout","setResponse","safePrintFFmpegArguments","spawn","stdio","resetTimeout","ffmpegLogInitialOutput","classes","inputFormat","inputSize","title","description","key","getItem","type","filtered","stdin","kill","forever","SCRYPTED_FFMPEG_NOISY","env","logger","ret","str","filter","indexOf","stdout","stderr","redactNext","arg","url","URL","protocol","join","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}